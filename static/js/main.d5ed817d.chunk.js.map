{"version":3,"sources":["reportWebVitals.ts","EnvConfig/MyEnvConfig.ts","Declar.tsx","Model/Helper.ts","App.tsx","Context/GalleryContext.tsx","UI/Styled.ts","UI/GalleryUICard.tsx","UI/GalleryUICardLoadSkeleton.tsx","UI/GalleryUI.tsx","Container/GalleryContainer.tsx","UI/WaterUIback.tsx","UI/WaterUI.tsx","Container/WaterContainer.tsx","AppRoutes.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","myEnvConfig","myProdConfig","Declar","className","style","fontSize","target","rel","href","float","process","MyEnvConfig","EnvName","PokeHelper","getPokeIdFromPokeSpecApiRes","apiRes","parseInt","url","replace","slice","GetGenNameDesc","gen","verNames","names","filter","name","indexOf","language","GetGenVerDesc","version_groups","GetSortedGen","pokemon_species","sort","a","b","GetPokeIdFromPokeSpecApiRes","GetGenusDesc","pokeSpec","genera","g","map","genus","reverse","join","GetNameDesc","toBeDisplayedNames","Helper","nameof","nameofFactory","Sleep","ms","Promise","callback","setTimeout","CopySelectedText","document","execCommand","alert","err","GetGlobalConfig","window","GlobalConfig","Fetcher","fetch","response","ok","json","error","App","children","value","fetcher","suspense","revalidateOnFocus","revalidateOnMount","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","GalleryContext","createContext","appProceededData","appIsShowHandler","withRouter","routeParams","globalConfig","pokeHelper","getTargetData","checkHandler","rtn","Gallary","Data","appGallary","length","targetData","routeId","match","params","sortedAppGen","obj","useState","stateAppData","setStateAppData","stateSearchKey","setStateSearchKey","stateIsShowSpecialOnly","scrollToThisEleRef","useRef","useEffect","stateScrollBtnCssClass","setStateScrollBtnCssClass","scrollHandler","addEventListener","once","removeEventListener","contextValues","filteredData","forEach","toLowerCase","includes","toLocaleLowerCase","search","is_legendary","is_mythical","appRouteCtx","type","ref","activeClassName","to","exact","onChange","e","toBeDisplayedData","desc","history","push","path","defaultValue","d","display","onClick","newData","array","i","j","Math","floor","random","shuffleArray","placeholder","Provider","current","scrollIntoView","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","StyledGallaryUICard","styled","div","pokeColor","StyledPokeType","span","pokemonType","genTFindicator","tf","GalleryUICard","poke","pokeSpecApiRes","useContext","useSWR","urlPoke","dataPoke","data","errorPoke","dataPokeSpec","errorPokeSpec","flavorText1Obj","flavor_text_entries","find","ft","flavorText2Obj","flavorText1","flavor_text","flavorText2","pokemonTypes","types","color","id","alt","src","height","weight","title","base_happiness","capture_rate","gender_rate","is_baby","forms_switchable","has_gender_differences","GalleryUICardLoadSkeleton","count","GalleryUI","stateIsLoadMore","setStateIsLoadMore","routeMatchParam","fallback","GallaryContainer","p","WaterUIback","appIsTargetNow","appSetDisplayHandler","abc","target_poke_desc_loading","WaterUI","stateIsShowReactImgGal","setStateIsShowReactImgGal","stateReactImgGalIndex","setStateReactImgGalIndex","stateToBeTargetPokeId","setStateToBeTargetPokeId","stateTargetPoke","setStateTargetPoke","proGalItems","pokeId","itemId","metadata","reactImgGalItems","proItem","original","proGalContainer","width","innerWidth","innerHeight","setDisplayHandler","items","container","options","imageHoverAnimation","hoveringBehaviour","gallerySize","itemBorderWidth","eventsListener","eventName","eventData","idx","onErrorImageURL","showBullets","showIndex","showThumbnails","lazyLoad","showPlayButton","startIndex","slideDuration","showFullscreenButton","onSlide","currentIndex","WaterContainer","AppRoutes","component","routeProps","GalleryContainer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5ed817d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import myDevConfig from './devConfig.json'\nimport myProdConfig from './prodConfig.json'\n\ninterface IMyEnvConfig { \n    EnvName: string\n    //DeclarHeight: number\n}\n\nconst { NODE_ENV = 'development' } = process.env\n\n// configurations by environment\nconst myEnvConfig: IMyEnvConfig = {\n    ...(NODE_ENV === 'production' ? myProdConfig : myDevConfig)\n}\n\nexport default myEnvConfig\n","import React, { FC } from 'react';\r\nimport MyEnvConfig from './EnvConfig/MyEnvConfig'\r\n\r\nimport Helper from './Model/Helper'\r\n\r\nconst Declar: FC = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"mx-auto w-50\">\r\n                <div style={{fontSize: 15}}>\r\n                    This React app is about Pokémon. It is adapted from ch.6\r\n                    of <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/PacktPublishing/React-17-Design-Patterns-and-Best-Practices-Third-Edition\">\r\n                        this book\r\n                    </a> and built from:\r\n                    <ul>\r\n                        <li>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://pokeapi.co/\">\r\n                                PokéAPI\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/vercel/swr\">\r\n                            SWR\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/styled-components/styled-components\">\r\n                                styled-components\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/wix/pro-gallery\">\r\n                                Pro Gallery\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/xiaolin/react-image-gallery\">\r\n                                React Image Gallery\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <p>Developed by Chan Ching Yin.<span style={{ float: 'right' }}>\r\n                    {`v${process.env.REACT_APP_VERSION}.${MyEnvConfig.EnvName}`}\r\n                    </span>\r\n                    </p>\r\n                <br />\r\n                <br />\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Declar;","import { useState } from 'react'\r\n\r\nimport * as ModelDef from '../Model/Model'\r\n\r\nfunction extract<T>(properties: Record<keyof T, true>) {\r\n\treturn function <TActual extends T>(value: TActual) {\r\n\t\tlet result = {} as T;\r\n\t\tfor (const property of Object.keys(properties) as Array<keyof T>) {\r\n\t\t\tresult[property] = value[property];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n//export const AppCache = async () => await caches.open('new-cache');\r\n\r\nexport const Helper = {\r\n\r\n\tnameof: <T>(name: keyof T) => name,\r\n\r\n\tnameofFactory: <T>() => (name: keyof T) => name,\r\n\r\n\tSleep: (ms: number) => {\r\n\t\treturn new Promise(callback => setTimeout(callback, ms));\r\n\t},\r\n\r\n\tCopySelectedText: () => {\r\n\t\ttry {\r\n\t\t\tlet isSuccess = document.execCommand('copy');\r\n\t\t\tif (!isSuccess) {\r\n\t\t\t\talert('Testing code was copied unsuccessfully');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\talert('Oops, unable to copy');\r\n\t\t}\r\n\t},\r\n\r\n\tGetGlobalConfig: () => {\r\n\t\treturn (window as any).GlobalConfig as ModelDef.TGlobalConfig\r\n\t},\r\n\r\n\tFetcher: (url: string) => {\r\n\t\treturn fetch(url).then((response: Response) => {\r\n\t\t\tif (response.ok) {\r\n\t\t\t\t//let cloneResponse: Response = response.clone()\r\n\t\t\t\t//console.log(cloneResponse)\r\n\t\t\t\t//AppCache().then((appCache: Cache) => appCache.put(url, cloneResponse))\r\n\t\t\t\t\r\n\t\t\t\treturn response.json()\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\terror: true\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n}\r\n\r\nexport const PokeHelper = () => {\r\n\r\n\tconst getPokeIdFromPokeSpecApiRes = (apiRes: ModelDef.TNamedAPIResource): number =>\r\n\t\tparseInt(apiRes.url.replace(\"https://pokeapi.co/api/v2/pokemon-species/\", \"\").slice(0, -1))\r\n\r\n\treturn {\r\n\r\n\t\tGetGenNameDesc:(gen: ModelDef.TGeneration): string => {\r\n\t\t\tlet rtn = \"\"\r\n\t\t\tlet verNames: ModelDef.TName[] = gen.names.filter((name: ModelDef.TName) => [\"en\", \"ja\"].indexOf(name.language.name) >= 0)\r\n\t\t\trtn = `${verNames[0]?.name} / ${verNames[1]?.name}`\r\n\t\t\treturn rtn\r\n\t\t},\r\n\r\n\t\tGetGenVerDesc: (gen: ModelDef.TGeneration): string =>\r\n\t\t\t(`ver: ${gen.version_groups[0].name}, ${gen.version_groups[1].name}`),\r\n\r\n\t\tGetSortedGen: (gen: ModelDef.TGeneration):ModelDef.TGeneration => {\r\n\t\t\treturn {\r\n\t\t\t\t...gen,\r\n\t\t\t\tpokemon_species: gen.pokemon_species.sort((a, b) => getPokeIdFromPokeSpecApiRes(a) - getPokeIdFromPokeSpecApiRes(b))\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tGetPokeIdFromPokeSpecApiRes: getPokeIdFromPokeSpecApiRes,\r\n\r\n\t\tGetGenusDesc: (pokeSpec: ModelDef.TPokemonSpecies): string => (\r\n\t\t\tpokeSpec.genera.filter((g: ModelDef.TGenus) => [\"en\", \"zh-Hant\"].indexOf(g.language.name) >= 0)\r\n\t\t\t\t.map((g: ModelDef.TGenus) => g.genus.replace(\"Pokémon\", \"\").replace(\"寶可夢\", \"\"))\r\n\t\t\t\t.reverse()\r\n\t\t\t\t.join(\" \")\r\n\t\t),\r\n\r\n\t\tGetNameDesc: (pokeSpec: ModelDef.TPokemonSpecies): string => {\r\n\t\t\tconst toBeDisplayedNames: ModelDef.TName[] = pokeSpec.names.filter((name: ModelDef.TName) => [\"en\", \"zh-Hant\", \"ja\"].indexOf(name.language.name) >= 0)\r\n\t\t\treturn `${toBeDisplayedNames[1].name} ${toBeDisplayedNames[0].name} ${toBeDisplayedNames[2].name}`\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default Helper","import React, { FC } from 'react';\r\nimport { SWRConfig } from 'swr';\r\n\r\nimport Helper from './Model/Helper'\r\n\r\nconst App: FC = ({ children }) => {\r\n    return (\r\n        <SWRConfig value={{\r\n            fetcher: Helper.Fetcher, suspense: true,\r\n            revalidateOnFocus: false, //all options below is to use useSWR to fetch only one time\r\n            revalidateOnMount: false,\r\n            revalidateOnReconnect: false,\r\n            refreshWhenOffline: false,\r\n            refreshWhenHidden: false,\r\n            refreshInterval: 0\r\n        }}>\r\n            <div className=\"App\">\r\n                {children}\r\n            </div>\r\n        </SWRConfig>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { NavLink as ReactLink, Route, withRouter } from 'react-router-dom'\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ChangeEvent, FC, ReactElement, useEffect, useRef, useState, createContext, Children } from 'react';\r\nimport * as ModelDef from '../Model/Model'\r\nimport Helper, { PokeHelper } from '../Model/Helper'\r\n\r\nexport interface IMyRouteMatchParams {\r\n    routeId: string\r\n}\r\n\r\nexport interface IGalleryContextHOC extends RouteComponentProps<IMyRouteMatchParams> {\r\n    //appGen: ModelDef.TGeneration,\r\n    //children: ReactElement\r\n}\r\n\r\ninterface IGalleryContext {\r\n    appProceededData: ModelDef.TNamedAPIResource[],\r\n    appIsShowHandler: any,\r\n    appRouteCtx?: RouteComponentProps<IMyRouteMatchParams>\r\n}\r\n\r\nexport const GalleryContext = createContext<IGalleryContext>({\r\n    appProceededData: [],\r\n    appIsShowHandler: null\r\n})\r\n\r\nconst shuffleArray = function (array: any[]) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n}\r\n\r\nconst scrollBtnCssClassHide = \"scroll-top scroll-top-hide\"\r\nconst scrollBtnCssClassShow = \"scroll-top scroll-top-show\"\r\n\r\nconst GalleryContextHOC: FC<IGalleryContextHOC> = ({ children, ...routeParams }): ReactElement => {\r\n    \r\n    const globalConfig = Helper.GetGlobalConfig()\r\n    const pokeHelper = PokeHelper()\r\n    //console.log(routeParams.match.params.routeId)\r\n\r\n    const getTargetData = (checkHandler: (g: ModelDef.TConfigGallaryData) => boolean): ModelDef.TConfigGallaryData => {\r\n        let rtn = globalConfig.Gallary.Data[0]\r\n\r\n        const appGallary = globalConfig.Gallary.Data.filter(g => checkHandler(g))\r\n        if (appGallary.length > 0) {\r\n            rtn = appGallary[0]\r\n        }\r\n        return rtn\r\n    }\r\n\r\n    const targetData = getTargetData(g => g.routeId === routeParams.match.params.routeId)\r\n    const sortedAppGen = pokeHelper.GetSortedGen(targetData.obj)\r\n\r\n    //const [stateAppData, setStateAppData] = useState<ModelDef.TNamedAPIResource[]>(sortedAppGen.pokemon_species);\r\n    const [stateAppData, setStateAppData] = useState<ModelDef.TNamedAPIResource[]>([]);\r\n\r\n    const [stateSearchKey, setStateSearchKey] = useState<string>('');\r\n    const [stateIsShowSpecialOnly, setStateIsShowSpecialOnly] = useState<boolean>(false)\r\n    const scrollToThisEleRef = useRef(null)\r\n\r\n    const shuffleHandler = () => {\r\n        let newData = shuffleArray([...stateAppData]);\r\n        setStateAppData(newData);\r\n    }\r\n\r\n    useEffect(() => { // re-load at appropriate time\r\n        setStateAppData(sortedAppGen.pokemon_species)\r\n    }, [routeParams.match.params, sortedAppGen.pokemon_species])\r\n\r\n    const [stateScrollBtnCssClass, setStateScrollBtnCssClass] = useState<string>(scrollBtnCssClassHide)\r\n    const scrollHandler = () => setStateScrollBtnCssClass(scrollBtnCssClassShow)\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler, { once: true })\r\n        return () => {\r\n            document.removeEventListener('scroll', scrollHandler)\r\n        };\r\n    })\r\n\r\n    const isShowHandler = (pokeSpec: ModelDef.TPokemonSpecies) => {\r\n        let rtn = true\r\n        if (stateIsShowSpecialOnly && !pokeSpec.is_legendary && !pokeSpec.is_mythical) {\r\n            rtn = false\r\n        }\r\n        return rtn\r\n    }\r\n\r\n    const search = () => {\r\n        let filteredData = [] as ModelDef.TNamedAPIResource[];\r\n        stateAppData.forEach((apiRes: ModelDef.TNamedAPIResource) => {\r\n            if (apiRes.name.toLowerCase().includes(stateSearchKey.toLocaleLowerCase())) {\r\n                filteredData = [...filteredData, apiRes];\r\n            }\r\n        });\r\n\r\n        return filteredData\r\n    }\r\n\r\n    const filteredStateAppData = search();\r\n\r\n    const selectGallaryHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        const toBeDisplayedData = getTargetData(g => g.desc === e.target.value);\r\n        //console.log(routeParams)\r\n        routeParams.history.push(routeParams.match.path.replace(\":routeId?\", toBeDisplayedData.routeId))\r\n    }\r\n\r\n    const contextValues: IGalleryContext = {\r\n        appProceededData: filteredStateAppData,\r\n        appIsShowHandler: isShowHandler,\r\n        appRouteCtx: routeParams\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/pageCss/gallery-context.css`} />\r\n\r\n            <div ref={scrollToThisEleRef}>&nbsp;</div>\r\n\r\n            <span className=\"nav-menu\">\r\n                <ReactLink activeClassName={\"currently-viewing\"} to={`/${targetData.routeId}`} exact={true}>List view</ReactLink>{' '}|{' '}\r\n                <ReactLink activeClassName={\"currently-viewing\"} to={`/waterfall/${targetData.routeId}`}>Waterfall gallery</ReactLink>\r\n            </span>\r\n\r\n            <div>\r\n                <select onChange={selectGallaryHandler} defaultValue={targetData.desc}>\r\n                    {globalConfig.Gallary.Data.map(d =>\r\n                        <option key={d.desc} value={d.desc}>{d.desc}</option>\r\n                    )\r\n                    }\r\n                </select>\r\n\r\n                <h5 style={{ display: \"inline-block\" }} className=\"ms-2\">\r\n                    {pokeHelper.GetGenNameDesc(sortedAppGen)}\r\n                </h5>\r\n\r\n                <br />\r\n                <button onClick={shuffleHandler}>Shuffle</button>\r\n                &nbsp;\r\n                <input type=\"text\" value={stateSearchKey} placeholder=\"Search by Eng name\"\r\n                    onChange={(e) => setStateSearchKey(e.target.value)} />\r\n                &nbsp; &nbsp;\r\n                {/* pending due to waterfall\r\n                <label style={{cursor:\"pointer\"}}>\r\n                    <input type=\"checkbox\" defaultChecked={stateIsShowSpecialOnly} onChange={(e) => { setStateIsShowSpecialOnly(e.target.checked) }} />\r\n                    <span> Only show legendary or mythical Pokémon</span>\r\n                </label>\r\n                */}\r\n            </div>\r\n            <br/>\r\n\r\n            <GalleryContext.Provider value={contextValues}>\r\n                {children}\r\n            </GalleryContext.Provider>\r\n\r\n            <button className={stateScrollBtnCssClass} onClick={() => {\r\n                //window.scrollTo({ top: Helper.GetGlobalConfig().DeclarHeight, behavior: 'smooth' })\r\n                let ele = scrollToThisEleRef.current as unknown as HTMLElement\r\n                ele.scrollIntoView();\r\n            }}\r\n                \r\n            >\r\n                ^\r\n            </button>\r\n        </>)\r\n};\r\n\r\nexport default withRouter(GalleryContextHOC)","import styled from 'styled-components'\nimport * as ModelDef from '../Model/Model'\n\n// Type colors\nconst type: any = {\n  bug: 'rgb(81,204,90)',\n  dark: 'rgb(104,129,213)',\n  dragon: 'rgb(254,136,88)',\n  electric: 'rgb(232,212,1)',\n  fairy: 'rgb(253,119,154)',\n  fighting: 'rgb(239,105,106)',\n  fire: 'rgb(255,167,103)',\n  flying: 'rgb(100,166,240)',\n  ghost: 'rgb(177,110,180)',\n  grass: 'rgb(154,195,13)',\n  ground: 'rgb(200,168,65)',\n  ice: 'rgb(96,232,244)',\n  normal: 'rgb(174, 174, 174)',\n  poison: 'rgb(171,122,203)',\n  psychic: 'rgb(236,127,244)',\n  rock: 'rgb(251,199,38)',\n  steel: 'rgb(128,138,165)',\n  water: 'rgb(100,198,247)'\n}\n\ntype TStyledGallaryUICardProps = {\n    pokeColor: string\n}\n\nexport const StyledGallaryUICard = styled.div<TStyledGallaryUICardProps>`\n  position: relative;\n  \n  ${({ pokeColor }) => `\n    background-image: linear-gradient(60deg, rgb(45, 45, 45) 30%, ${pokeColor} 100%);\n  `}\n\n  .ul-poke-desc {\n    ${({ pokeColor }) => `border-left: 5px solid ${pokeColor};`}\n    list-style-type: none;\n    padding: 3px 10px;\n  }\n\n  .ul-poke-desc li:first-child {\n     padding-bottom: 10px;\n  }\n\n    .ul-poke-spec li {\n        padding-bottom: 5px;\n        white-space:nowrap;\n        color: #ffffff;\n    }\n\n    .h-weight-height-desc{\n        margin-left:15px;\n        margin-top:5px;\n    }\n\n`\n\ntype TStyledPokeTypeProps = {\n    pokemonType: string\n}\n\nexport const StyledPokeType = styled.span<TStyledPokeTypeProps>`\n  position: relative;\n  \n  ${({ pokemonType }) => `\n    background: ${type[pokemonType]};\n    background-size: 65%;\n    background-position: center;\n  `}\n\n  display: inline-block;\n  border-radius: 20px;\n  font-weight: bold;\n  padding: 6px;\n  color: #444444;\n  margin-right: 4px;\n  opacity: 1;\n  text-transform: capitalize;\n`","// Dependencies\r\nimport { useEffect, useContext, Suspense } from 'react'\r\nimport { FC } from 'react'\r\nimport useSWR from 'swr'\r\n\r\n//import { AppCache } from '../Model/Helper'\r\nimport * as ModelDef from '../Model/Model'\r\nimport Helper, { PokeHelper } from '../Model/Helper'\r\nimport { GalleryContext } from \"../Context/GalleryContext\"\r\nimport { StyledGallaryUICard, StyledPokeType } from './Styled'\r\n\r\ntype Props = {\r\n    pokeSpecApiRes: ModelDef.TNamedAPIResource\r\n}\r\n\r\nconst pokeHelper = PokeHelper()\r\nconst urlPoke = (pokeSpecApiRes: ModelDef.TNamedAPIResource) => `https://pokeapi.co/api/v2/pokemon/${pokeHelper.GetPokeIdFromPokeSpecApiRes(pokeSpecApiRes)}`\r\nconst genTFindicator = (tf: boolean) => (tf ? \"Yes\" : \"--\" )\r\n\r\nconst GalleryUICard: FC<Props> = ({ pokeSpecApiRes }) => {\r\n\r\n    const {\r\n        appIsShowHandler,\r\n    } = useContext(GalleryContext)\r\n\r\n    const { data: dataPoke, error: errorPoke } = useSWR(urlPoke(pokeSpecApiRes))\r\n    const { data: dataPokeSpec, error: errorPokeSpec }: { data?: any, error?: any } = useSWR(pokeSpecApiRes.url)\r\n\r\n    let poke: ModelDef.TPokemon\r\n    let pokeSpec: ModelDef.TPokemonSpecies\r\n\r\n    // recall the error we set on the fetcher\r\n    if (errorPoke || errorPokeSpec || dataPoke.error || dataPokeSpec.error) {\r\n        return <div />\r\n    } else {\r\n        poke = dataPoke as ModelDef.TPokemon\r\n        pokeSpec = dataPokeSpec as ModelDef.TPokemonSpecies\r\n    }\r\n\r\n    const flavorText1Obj: ModelDef.TFlavorText|undefined = pokeSpec.flavor_text_entries.find((ft: ModelDef.TFlavorText) => ft.language.name === \"en\")\r\n    const flavorText2Obj: ModelDef.TFlavorText | undefined = pokeSpec.flavor_text_entries.find((ft: ModelDef.TFlavorText) => ft.language.name === \"zh-Hant\") ??\r\n        pokeSpec.flavor_text_entries.find((ft: ModelDef.TFlavorText) => ft.language.name === \"ja\")\r\n\r\n    const flavorText1 = flavorText1Obj?.flavor_text.replace('\\u000c', ' ')\r\n    const flavorText2 = flavorText2Obj?.flavor_text.replace('\\u000c', ' ').replace('\\n','')\r\n\r\n    const pokemonTypes = poke.types.map((pokemonType: any) => pokemonType.type.name)\r\n\r\n    return (appIsShowHandler(pokeSpec) &&\r\n        <StyledGallaryUICard pokeColor={pokeSpec.color.name} className=\"border-bottom\">\r\n            <h2>#{pokeSpec.id} {pokeHelper.GetNameDesc(pokeSpec)}</h2>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        {\r\n                            pokemonTypes.map((pokemonType: string) =>\r\n                                <StyledPokeType key={pokemonType} pokemonType={pokemonType}><span key={poke!.name + pokemonType}>{pokemonType}</span></StyledPokeType>)\r\n                        }\r\n\r\n                        <img alt={poke.name} src={\r\n                            //poke.sprites.front_default\r\n                            `sprites/pokemon/${poke.id}.png`\r\n                        } />\r\n                        \r\n                        <ul className=\"ul-poke-desc\">\r\n                            <li>{flavorText1}</li>\r\n                            <li>{flavorText2}</li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm my-auto\">\r\n                        <div className=\"row\">\r\n                            <h5 className=\"h-weight-height-desc\">Height: {poke.height * 10} cm\r\n                                &nbsp;\r\n                                &nbsp;\r\n                                Weight: {poke.weight / 10} kg</h5>\r\n                            <div className=\"col-sm\">\r\n                                <ul className=\"ul-poke-spec\">\r\n                                    <li title=\"The happiness when caught by a normal Pokéball; up to 255. The higher the number, the happier the Pokémon.\">\r\n                                        Base happiness: {pokeSpec.base_happiness}\r\n                                    </li>\r\n                                    <li title=\"The base capture rate; up to 255. The higher the number, the easier the catch.\">\r\n                                        Capture rate: {pokeSpec.capture_rate}\r\n                                    </li>\r\n                                    <li title=\"The chance of this Pokémon being female, in eighths; or -1 for genderless.\">\r\n                                        Gender rate: {pokeSpec.gender_rate}\r\n                                    </li>\r\n                                    <li title=\"The color of this Pokémon for Pokédex search.\">\r\n                                        Color: {pokeSpec.color.name}\r\n                                    </li>\r\n                                    <li title=\"The genus of this Pokémon species listed in multiple languages.\">\r\n                                        Genera: {pokeHelper.GetGenusDesc(pokeSpec)}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <ul className=\"ul-poke-spec\">\r\n                                    <li title=\"Whether or not this is a baby Pokémon.\">\r\n                                        Is baby? {genTFindicator(pokeSpec.is_baby)}\r\n                                    </li>\r\n                                    <li title=\"Whether or not this Pokémon has multiple forms and can switch between them.\">\r\n                                        Forms switchable? {genTFindicator(pokeSpec.forms_switchable)}\r\n                                    </li>\r\n                                    <li title=\"Whether or not this Pokémon has visual gender differences.\">\r\n                                        Has gender differences? {genTFindicator(pokeSpec.has_gender_differences)}\r\n                                    </li>\r\n                                    <li title=\"Whether or not this is a legendary Pokémon.\">\r\n                                        Is legendary? {genTFindicator(pokeSpec.is_legendary)}\r\n                                    </li>\r\n                                    <li title=\"Whether or not this is a mythical Pokémon.\">\r\n                                        Is mythical? {genTFindicator(pokeSpec.is_mythical)}\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledGallaryUICard>\r\n    )\r\n}\r\n\r\nexport default GalleryUICard\r\n","import { FC } from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport 'react-loading-skeleton/dist/skeleton.css'\n\nimport * as ModelDef from '../Model/Model'\nimport Helper, { PokeHelper } from '../Model/Helper'\n\ntype Props = {\n    pokeSpecApiRes: ModelDef.TNamedAPIResource\n}\n\nconst GalleryUICardLoadSkeleton: FC<Props> = ({ pokeSpecApiRes }) => {\n\n    const pokeHelper = PokeHelper()\n\n    return (\n        <div>\n            <h2>#{pokeHelper.GetPokeIdFromPokeSpecApiRes(pokeSpecApiRes)} {pokeSpecApiRes.name}</h2>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                        <Skeleton height={10} count={5} />\n                        </div>\n                        <div className=\"col-sm\">\n                        <Skeleton height={10} count={5} />\n                        </div>\n                        <div className=\"col-sm\">\n                        <Skeleton height={10} count={5} />\n                        </div>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default GalleryUICardLoadSkeleton\n","import { FC, useContext, useState, useRef, useEffect, Suspense, lazy } from 'react';\r\n//import { RouteComponentProps } from 'react-router';\r\n\r\nimport Helper from '../Model/Helper'\r\nimport * as ModelDef from '../Model/Model'\r\nimport { GalleryContext } from \"../Context/GalleryContext\"\r\nimport GallaryUICard from \"./GalleryUICard\"\r\nimport PokeCardLoadingSkeleton from \"./GalleryUICardLoadSkeleton\"\r\n\r\nconst GalleryUI: FC = () => {\r\n\r\n\tconst {\r\n\t\tappProceededData,\r\n\t\tappRouteCtx\r\n\t} = useContext(GalleryContext)\r\n\r\n\tconst [stateIsLoadMore, setStateIsLoadMore] = useState<boolean>(false)\r\n\r\n\t// just to avoid the following warning for the \"useEffect\" line below:\r\n\t// \"React Hook useEffect has a complex expression in the dependency array. \r\n\t// Extract it to a separate variable so it can be statically checked\"\r\n\tconst routeMatchParam = appRouteCtx!.match.params\r\n\r\n\tuseEffect(() => { // re-load at appropriate time\r\n\t\tsetStateIsLoadMore(false)\r\n\t}, [routeMatchParam])\r\n\r\n\t\r\n\r\n\t//const GallaryUICard = lazy(() => import(\"./GalleryUICard\"))\r\n\r\n\treturn (appProceededData == null ? <></> :\r\n\t\t<>\r\n\t\t\t<Suspense fallback={<p>Loading...</p>}>\r\n\t\t\t{appProceededData.slice(0, 30).map((apiRes: ModelDef.TNamedAPIResource) =>\r\n\t\t\t\t<Suspense key={\"GallaryUIsuspense\" + apiRes.name} fallback={<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>}>\r\n\t\t\t\t\t{/*<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>*/}\r\n\t\t\t\t\t<GallaryUICard key={apiRes.name} pokeSpecApiRes={apiRes} />\r\n\t\t\t\t</Suspense>\r\n\t\t\t)}\r\n\t\t\t</Suspense>\r\n\r\n\t\t\t<Suspense fallback={<p>Loading...</p>}>\r\n\t\t\t\t{appProceededData.slice(30, 60).map((apiRes: ModelDef.TNamedAPIResource) =>\r\n\t\t\t\t\t<Suspense key={\"GallaryUIsuspense\" + apiRes.name} fallback={<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes} />}>\r\n\t\t\t\t\t\t{/*<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>*/}\r\n\t\t\t\t\t\t<GallaryUICard key={apiRes.name} pokeSpecApiRes={apiRes} />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t)}\r\n\t\t\t</Suspense>\r\n\r\n\t\t\t{appProceededData.length > 60 && !stateIsLoadMore &&\r\n\t\t\t\t<>\r\n\t\t\t\t<button onClick={() => setStateIsLoadMore(true)} className=\"btn btn-primary mx-auto d-block mt-3\">\r\n\t\t\t\t\tLoad more\r\n\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t{stateIsLoadMore &&\r\n\t\t\t\t<>\r\n\t\t\t\t<Suspense fallback={<p>Loading...</p>}>\r\n\t\t\t\t{appProceededData.slice(60, 90).map((apiRes: ModelDef.TNamedAPIResource) =>\r\n\t\t\t\t\t<Suspense key={\"GallaryUIsuspense\" + apiRes.name} fallback={<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes} />}>\r\n\t\t\t\t\t\t{/*<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>*/}\r\n\t\t\t\t\t\t<GallaryUICard key={apiRes.name} pokeSpecApiRes={apiRes} />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t)}\r\n\t\t\t</Suspense>\r\n\r\n\t\t\t<Suspense fallback={<p>Loading...</p>}>\r\n\t\t\t\t{appProceededData.slice(90, 120).map((apiRes: ModelDef.TNamedAPIResource) =>\r\n\t\t\t\t\t<Suspense key={\"GallaryUIsuspense\" + apiRes.name} fallback={<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes} />}>\r\n\t\t\t\t\t\t{/*<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>*/}\r\n\t\t\t\t\t\t<GallaryUICard key={apiRes.name} pokeSpecApiRes={apiRes} />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t)}\r\n\t\t\t</Suspense>\r\n\r\n\t\t\t<Suspense fallback={<p>Loading...</p>}>\r\n\t\t\t\t{appProceededData.slice(120, 151).map((apiRes: ModelDef.TNamedAPIResource) =>\r\n\t\t\t\t\t<Suspense key={\"GallaryUIsuspense\" + apiRes.name} fallback={<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes} />}>\r\n\t\t\t\t\t\t{/*<PokeCardLoadingSkeleton pokeSpecApiRes={apiRes}/>*/}\r\n\t\t\t\t\t\t<GallaryUICard key={apiRes.name} pokeSpecApiRes={apiRes} />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t)}\r\n\t\t\t</Suspense>\r\n\t\t\t</>}\r\n\t\t\t</>)\r\n}\r\n\r\nexport default GalleryUI;","import { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { SWRConfig } from 'swr'\r\n\r\nimport * as ModelDef from '../Model/Model'\r\nimport GalleryContextHOC, { IGalleryContextHOC } from \"../Context/GalleryContext\";\r\nimport GalleryUI from '../UI/GalleryUI';\r\n\r\nconst GallaryContainer: FC = (p) => {\r\n    \r\n    return (\r\n        <GalleryContextHOC {...p}>\r\n                <GalleryUI />\r\n        </GalleryContextHOC>\r\n            )\r\n};\r\n\r\nexport default GallaryContainer;","// Dependencies\r\nimport { useEffect, useContext } from 'react'\r\nimport { FC } from 'react'\r\nimport useSWR from 'swr'\r\n\r\n//import { AppCache } from '../Model/Helper'\r\nimport * as ModelDef from '../Model/Model'\r\nimport Helper, { PokeHelper } from '../Model/Helper'\r\nimport { GalleryContext } from \"../Context/GalleryContext\"\r\n\r\ntype TProps = {\r\n    appIsTargetNow: boolean\r\n    pokeSpecApiRes: ModelDef.TNamedAPIResource\r\n    appSetDisplayHandler: any\r\n}\r\n\r\nconst pokeHelper = PokeHelper()\r\n\r\nconst WaterUIback: FC<TProps> = ({ pokeSpecApiRes, appIsTargetNow, appSetDisplayHandler }) => {\r\n\r\n    let rtn = null //always return null since this component renders nothing but do the useSWR job only\r\n\r\n    //console.log(appIsTargetNow)\r\n    /*\r\n    if (!appIsTargetNow) {\r\n        return null\r\n    }\r\n    */\r\n\r\n    const {\r\n        appIsShowHandler,\r\n    } = useContext(GalleryContext)\r\n\r\n    const { data: dataPokeSpec, error: errorPokeSpec }: { data?: any, error?: any } = useSWR(pokeSpecApiRes.url)\r\n    //console.log(pokeSpecApiRes.url)\r\n    //console.log(dataPokeSpec)\r\n    let pokeSpec: ModelDef.TPokemonSpecies\r\n\r\n    useEffect(() => { abc() })\r\n\r\n    if (errorPokeSpec || dataPokeSpec.error) {\r\n        return rtn //<div key={\"WaterUIback2\" + pokeSpecApiRes.name}>Still loading</div>\r\n    }\r\n\r\n    pokeSpec = dataPokeSpec as ModelDef.TPokemonSpecies\r\n\r\n    const abc = () => {\r\n        //console.log(123)\r\n        if (appIsTargetNow) {\r\n            appSetDisplayHandler(pokeSpec)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    //return <span>{rtnMsg}</span>\r\n\r\n    return rtn //<span key={\"WaterUIback3\" + pokeSpecApiRes.name}></span> //null // <span key={\"WaterUIback3\" + pokeSpecApiRes.name}></span>\r\n    \r\n}\r\n\r\nexport default WaterUIback\r\n","import { FC, useContext, useEffect, useState, Suspense } from 'react';\r\n\r\nimport { ProGallery } from 'pro-gallery'\r\nimport 'pro-gallery/dist/statics/main.css';\r\nimport ReactImageGallery, { ReactImageGalleryItem } from 'react-image-gallery';\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport * as ModelDef from '../Model/Model'\r\nimport Helper, { PokeHelper } from '../Model/Helper'\r\n\r\nimport { GalleryContext } from \"../Context/GalleryContext\";\r\nimport WaterUIback from './WaterUIback';\r\nimport useSWR from 'swr';\r\n\r\nconst target_poke_desc_loading = \"loading...\"\r\n\r\nconst WaterUI: FC = () => {\r\n\r\n    const {\r\n        appIsShowHandler,\r\n    } = useContext(GalleryContext)\r\n\r\n    const [stateIsShowReactImgGal, setStateIsShowReactImgGal] = useState<boolean>(false)\r\n    const [stateReactImgGalIndex, setStateReactImgGalIndex] = useState<number>(0)\r\n    const [stateToBeTargetPokeId, setStateToBeTargetPokeId] = useState<number>(-1)\r\n    const [stateTargetPoke, setStateTargetPoke] = useState<ModelDef.TPokemonSpecies|null>(null)\r\n\r\n    const {\r\n        appProceededData,\r\n    } = useContext(GalleryContext)\r\n\r\n    const pokeHelper = PokeHelper()\r\n\r\n    const proGalItems = appProceededData.map((apiRes: ModelDef.TNamedAPIResource) => {\r\n\r\n        const pokeId = pokeHelper.GetPokeIdFromPokeSpecApiRes(apiRes)\r\n        //console.log(pokemonId)\r\n            return {\r\n                itemId: pokeId + \"\",\r\n                url: `sprites/pokemon/other/dream-world/${pokeId}.svg`,\r\n                metadata: {\r\n                    type: \"image\",\r\n                    alt: ' '\r\n                }\r\n            }\r\n    })\r\n\r\n    const reactImgGalItems = proGalItems.map((proItem: any) => ({\r\n        pokeId: proItem.itemId,\r\n        original: proItem.url\r\n    }))\r\n\r\n    const proGalContainer = {\r\n        width: window.innerWidth - 60, // minus some margin\r\n        height: window.innerHeight\r\n    };\r\n\r\n    const proGalOptions = {\r\n        imageHoverAnimation: 'ZOOM_IN',\r\n        hoveringBehaviour: 'NEVER_SHOW',\r\n        //gallerySizeType: 'px',\r\n        //gallerySizePx: 200,\r\n        gallerySize: 30,\r\n        itemBorderWidth: 2,\r\n        //itemEnableShadow: true,\r\n        //imageMargin: 2,\r\n        //minItemSize: 30,\r\n    };\r\n\r\n    const proGalEventsListener = (eventName: string, eventData: any) => {\r\n\r\n        switch (eventName) {\r\n            case 'ITEM_ACTION_TRIGGERED':\r\n                //console.log(eventData)\r\n                if (eventData.type === 'image') {\r\n\r\n                    setStateReactImgGalIndex(eventData.idx)\r\n\r\n                    setStateTargetPoke(null)\r\n                    setStateToBeTargetPokeId(parseInt(eventData.id))\r\n                    setStateIsShowReactImgGal(true)\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    const setDisplayHandler = (pokeSpec: ModelDef.TPokemonSpecies) => {\r\n        setStateTargetPoke(pokeSpec)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/pageCss/water-ui.css`} />\r\n\r\n            {appProceededData.length !== 0 &&\r\n                <ProGallery items={proGalItems} container={proGalContainer}\r\n                    options={proGalOptions} eventsListener={proGalEventsListener} />\r\n            }\r\n\r\n            {stateIsShowReactImgGal &&\r\n                <div className=\"react-image-gallery-container-container\">\r\n                    <div className=\"react-image-gallery-container\">\r\n                    <ReactImageGallery items={reactImgGalItems}\r\n                        onErrorImageURL={'water-default.png'}\r\n                        showBullets={false}\r\n                        showIndex={true}\r\n                        showThumbnails={true}\r\n                        lazyLoad={true}\r\n                        showPlayButton={false}\r\n                        startIndex={stateReactImgGalIndex}\r\n                        slideDuration={0}\r\n                        showFullscreenButton={false}\r\n                        onClick={() => setStateIsShowReactImgGal(false)}\r\n                        onSlide={(currentIndex: number) => {\r\n                            setStateTargetPoke(null)\r\n                            setStateToBeTargetPokeId(parseInt(reactImgGalItems[currentIndex].pokeId))\r\n                        }}\r\n                        /></div></div>\r\n            }\r\n\r\n            <Suspense fallback={null}>\r\n            {appProceededData.map((apiRes: ModelDef.TNamedAPIResource) =>\r\n                    <WaterUIback key={\"WaterUIback1\" + apiRes.name} pokeSpecApiRes={apiRes}\r\n                        appIsTargetNow={pokeHelper.GetPokeIdFromPokeSpecApiRes(apiRes) === (stateToBeTargetPokeId)}\r\n                        appSetDisplayHandler={setDisplayHandler} />\r\n                )}\r\n            </Suspense>\r\n\r\n            {\r\n                stateIsShowReactImgGal &&\r\n                <div className=\"target-poke-desc\">\r\n                    <h1 className=\"target-poke-desc-top-left\">{stateTargetPoke != null ? \"#\" + stateTargetPoke.id : target_poke_desc_loading}</h1>\r\n                    <h1 className=\"target-poke-desc-bottom-center\">{stateTargetPoke != null ? pokeHelper.GetNameDesc(stateTargetPoke) : target_poke_desc_loading}</h1>\r\n                </div>\r\n            }\r\n\r\n        </>)\r\n};\r\n\r\nexport default WaterUI;","import { FC, useContext, useEffect, useState } from 'react';\r\nimport { SWRConfig } from 'swr'\r\nimport * as ModelDef from '../Model/Model'\r\nimport Helper from '../Model/Helper'\r\nimport GalleryContextHOC, { IGalleryContextHOC } from \"../Context/GalleryContext\";\r\nimport WaterUI from '../UI/WaterUI'\r\n\r\nconst WaterContainer: FC = (p) => {\r\n\r\n    return (\r\n        <GalleryContextHOC {...p}>\r\n            <WaterUI />\r\n        </GalleryContextHOC>\r\n    )\r\n};\r\n\r\nexport default WaterContainer;","import { HashRouter as ReactHashRouter, Route as ReactRoute, Switch as ReactSwitch, withRouter } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router';\nimport Helper from './Model/Helper'\nimport * as ModelDef from './Model/Model'\nimport { IMyRouteMatchParams } from './Context/GalleryContext'\n\n// Components\nimport App from './App'\nimport GalleryContainer from './Container/GalleryContainer'\nimport WaterContainer from './Container/WaterContainer'\n\nconst AppRoutes = () => {\n\n    //const globalConfig = Helper.GetGlobalConfig()\n\n    return (\n        <App>\n            <ReactHashRouter>\n                <ReactSwitch>\n                    <ReactRoute path=\"/waterfall/:routeId?\" component={(routeProps: RouteComponentProps<IMyRouteMatchParams>) => <WaterContainer />} exact />\n                    <ReactRoute path=\"/:routeId?\" component={(routeProps: RouteComponentProps<IMyRouteMatchParams>) => <GalleryContainer/>} exact />\n                </ReactSwitch>\n            </ReactHashRouter>\n        </App>\n    )\n}\n\nexport default AppRoutes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as ReactBrowserRouter } from 'react-router-dom'\n\nimport Declar from './Declar'\nimport AppRoutes from './AppRoutes'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Declar/>\n        <ReactBrowserRouter>\n            <AppRoutes />\n        </ReactBrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}